/*
   In this applet, the user can type in two real numbers.  The
   user can click on buttons labled +, - , *, and / to perform
   basic arithmetic operations on the numbers.  When the user
   clicks on a button the answer is displayed.  The applet
   should be about 200 by 120 pixels.
*/

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class SimpleCalculator extends JApplet implements ActionListener 
{

   JTextField xInput, yInput;  // Input boxes for the numbers.
   
   JLabel answer;  // JLabel for displaying the answer, or an 
                   //    error message if appropriate.


   public void init() 
   {
      
      /* Since I will be using the content pane several times,
         declare a variable to represent it.  Note that the
         return type of getContentPane() is Container. */
      
      Container content = getContentPane();
      
      /* Assign a background color to the applet and its
         content panel.  This color will show through between
         components and around the edges of the applet. */
      
      setBackground(Color.gray);
      content.setBackground(Color.gray);
      
      /* Create the input boxes, and make sure that the background
         color is white.  (They are likely to be white by default.) */
      
      xInput = new JTextField("0");
      xInput.setBackground(Color.white);
      yInput = new JTextField("0");
      yInput.setBackground(Color.white);
      
      /* Create panels to hold the input boxes and labels "x =" and
         "y = ".  By using a BorderLayout with the TextField in the
         Center position, the TextField will take up all the space
         left after the label is given its preferred size. */
      
      JPanel xPanel = new JPanel();
      xPanel.setLayout(new BorderLayout());
      xPanel.add( new Label(" x = "), BorderLayout.WEST );
      xPanel.add(xInput, BorderLayout.CENTER);
      
      JPanel yPanel = new JPanel();
      yPanel.setLayout(new BorderLayout());
      yPanel.add( new Label(" y = "), BorderLayout.WEST );
      yPanel.add(yInput, BorderLayout.CENTER);
      
      /* Create a panel to hold the four buttons for the four
         operations.  A GridLayout is used so that the buttons
         will all have the same size and will fill the panel. 
         The applet servers as ActionListener for the buttons. */
         
      JPanel buttonPanel = new JPanel();
      buttonPanel.setLayout(new GridLayout(1,4));

      JButton plus = new JButton("+");
      plus.addAc
